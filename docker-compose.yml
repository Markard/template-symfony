services:
  php-fpm:
    image: markarddev/php-fpm:8.4
    build:
      context: docker/php-fpm
    volumes:
      - ./project:/var/www/project
      - ./docker/php-fpm/php-fpm/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro
      - ./docker/php-fpm/xdebug/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini:ro
    expose:
      - "9000"
    links:
      - postgres
      - mysql
      - clickhouse
      - redis
      - rabbitmq
      - kafka

  nginx:
    image: nginx:${NGINX_VERSION}
    volumes:
      - ./project:/var/www/project:cached
      - ./docker/nginx/site.conf:/etc/nginx/conf.d/site.conf
    ports:
      - "80:80"
    links:
      - php-fpm

  mysql:
    image: mysql:${MYSQL_VERSION}
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: true
      MYSQL_DATABASE: db_name
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
    volumes:
      - ./docker/mysql:/etc/mysql/conf.d
    ports:
      - "3306:3306"

  postgres:
    image: postgres:${POSTGRESQL_VERSION}
    environment:
      POSTGRES_DB: db_name
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5432:5432"

  clickhouse:
    image: clickhouse/clickhouse-server:${CLICKHOUSE_VERSION}
    environment:
      - CLICKHOUSE_DB=db_name
      - CLICKHOUSE_USER=user
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
      - CLICKHOUSE_PASSWORD=pass
    ports:
      - "8123:8123"

  redis:
    image: redis:${REDIS_VERSION}
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:4-management
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: pass
      RABBITMQ_NODE_PORT: 5672
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  kafka:
    image: apache/kafka:4.0.0
    environment:
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: 'CONTROLLER://:9091,HOST://:9092,INTER://:19092'
      KAFKA_ADVERTISED_LISTENERS: 'INTER://kafka-1:19092,HOST://localhost:29092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTER:PLAINTEXT,HOST:PLAINTEXT'

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9091

      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTER'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    expose:
      - "19092"
    ports:
      - "29092:9092"
    healthcheck:
      test: "bash -c 'printf \"\" > /dev/tcp/127.0.0.1/9091; exit $$?;'"
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 30s